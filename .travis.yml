language: python
cache:
  pip: true
  directories:
    - /home/travis/.rvm/gems
# env:
#   - PR_AUTHOR=${TRAVIS_PULL_REQUEST_SLUG::-15}
git:
  depth: 10
jobs:
  allow_failures:
    env:
      - CAN_FAIL=true
  include:
    - stage: validate-and-build
      name: "Validate and build"
      install:
        - gem install asciidoctor asciidoctor-diagram rouge
        - pip3 install pyyaml aura.tar.gz
      script:
        # Fail if Asciidoctor encounters errors. Pass otherwise. Then, build updated distros
        - chmod +x ./scripts/check-asciidoctor-build.sh
        - chmod +x ./scripts/get-updated-distros.sh
        - ./scripts/check-asciidoctor-build.sh || travis_terminate 1
        - |
          ./scripts/get-updated-distros.sh |
            while read -r filename; do
              if [ "$filename" == "_topic_maps/_topic_map.yml" ]; then python3 build.py --distro openshift-enterprise --product "OpenShift Container Platform" --version 4.14 --no-upstream-fetch

              elif [ "$filename" == "_topic_maps/_topic_map_osd.yml" ]; then python3 build.py --distro openshift-dedicated --product "OpenShift Dedicated" --version 4 --no-upstream-fetch

              elif [ "$filename" == "_topic_maps/_topic_map_ms.yml" ]; then python3 build.py --distro microshift --product "Microshift" --version 4 --no-upstream-fetch

              elif [ "$filename" == "_topic_maps/_topic_map_rosa.yml" ]; then python3 build.py --distro openshift-rosa --product "Red Hat OpenShift Service on AWS" --version 4 --no-upstream-fetch

              elif [ "$filename" == "_distro_map.yml" ]; then python3 build.py --distro openshift-enterprise --product "OpenShift Container Platform" --version 4.14 --no-upstream-fetch
              fi
            done

          if [ -d "drupal-build" ]; then python3 makeBuild.py; fi

    # Remove Vale stage until PR commenting feature is ready
    # - stage: check-with-vale
    #   env:
    #     - CAN_FAIL=true
    #   if: type IN (pull_request) AND sender != "openshift-cherrypick-robot"
    #   name: "Run Vale against PR asciidoc files"
    #   language: minimal
    #   script:
    #     - travis_retry wget https://github.com/errata-ai/vale/releases/download/v2.15.4/vale_2.15.4_Linux_64-bit.tar.gz --retry-connrefused
    #     - mkdir bin && tar -xvzf vale_2.15.4_Linux_64-bit.tar.gz -C bin
    #     - export PATH=./bin:"$PATH"
    #     - travis_retry vale sync # pull down VRH rules package
    #     - chmod +x ./scripts/check-with-vale.sh
    #     - ./scripts/check-with-vale.sh; fi

    # Commenting out to disable auto-merging of PRs
    # - stage: automerge
    #   if: env(PR_AUTHOR)=openshift-cherrypick-robot
    #   script: bash ./automerge.sh

    - stage: netlify
      name: "Build and deploy with Netlify"
      env:
        - CAN_FAIL=true
      language: minimal
      if: type IN (pull_request) AND branch IN (main, enterprise-4.13, enterprise-4.14) AND sender != "openshift-cherrypick-robot"
      script:
        - chmod +x autopreview.sh
        - ./autopreview.sh

stages:
  - netlify
  - validate-and-build
  #- check-with-vale
  #- automerge
