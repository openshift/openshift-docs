#!/bin/bash -e
# The assemble script builds the application artifacts from source and
# places them into appropriate directories inside the image.

# Required to install `ffi` separately due to an installation issue with ffi v-1.9.21
echo "---> Installing ffi ..."
gem install ffi --version 1.9.18
# `gem install` is required because `bundle install` does not properly place `asciibinder` into $PATH
echo "---> Installing AsciiBinder ..."
gem install ascii_binder

# Move git repository to local working directory
shopt -s dotglob
echo "---> Installing application source ..."
mv /tmp/src/* ./

# Fetch and locally add all remote branches to ensure AsciiBinder is able to build the necessary branches
echo "---> Fetching remote branches"
# Because the s2i builder only makes the remote branch applicable to the specified branch,
# it's necessary to enforce a * ref so that all branches are referenced
sed -i 's%fetch = +refs.*%fetch = +refs/heads/*:refs/remotes/origin/*%' .git/config
git fetch --all --quiet
for remote in $(git branch -r | egrep -v "(>|$(git rev-parse --abbrev-ref HEAD))|master"); do git checkout --force --track $remote; done
git checkout master

# Fixes incompatible character encodings: US-ASCII and UTF-8 error
export LANG="en_US.UTF-8"

echo "---> AsciiBinder packaging commercial content ..."
# AsciiBinder uses git to some extent and requires `user.email` to be properly set
git config user.email "devel@openshift.com"
# Package assets for commercial site only, without Minishift content
asciibinder package --site=commercial
# Move commercial content to its own directory, including commercial specific redirects and 404 page
mkdir commercial_package
mv _package/commercial commercial_package
git checkout master
mkdir commercial_package/commercial/httpd-cfg
mv .s2i/httpd-cfg/01-commercial.conf commercial_package/commercial/httpd-cfg
mv 404-commercial.html commercial_package/commercial/404.html

echo "---> Installing Minishift content ..."
mkdir minishift
cd minishift
if wget http://artifacts.ci.centos.org/minishift/minishift/docs/latest/minishift-adoc.tar ; then
    tar -xvf minishift-adoc.tar --strip 1
    cat _topic_map.yml >> ../_topic_map.yml
    rm minishift-adoc.tar
    cd ..
    git add .
    git commit -am "Minishift build-time commit"
else
    echo "WARNING: Could not retrieve minishift-adoc.tar"
    cd ..
    rmdir minishift
fi

echo "---> AsciiBinder packaging community content ..."
# Package assets for community site only, with Minishift content
asciibinder package --site=community
# Move community content to its own directory, including community specific redirects and 404 page
mkdir community_package
mv _package/community community_package
git checkout master
mkdir community_package/community/httpd-cfg
mv .s2i/httpd-cfg/01-community.conf community_package/community/httpd-cfg
mv 404-community.html community_package/community/404.html

# Fix source directory permissions
echo "---> Fixing permissions ..."
fix-permissions ./
